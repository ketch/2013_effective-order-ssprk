cM = [0
0.601245068769724
0.436888719886063
0.747760163757110];

AM = [0 0 0 0;
0.601245068769724 0 0 0;
0.139346829159954 0.297541890726109 0 0;
0.060555450075478 0.129301708677891 0.557903005003740 0];

bM = [0.220532078662434 0.180572397883936 0.181420582644840 0.417474940808790]';


cR = [
0
0.438463764036947
0.639336395725557
0.434353425654020
0.843416464962307];

AR = [0 0 0 0 0;
0.438463764036947 0 0 0 0;
0.213665532574654 0.425670863150903 0 0 0;
0.061345094040860 0.122213530726218 0.250794800886942 0 0;
0.039559973266996 0.078812561688700 0.161731525131914 0.563312404874697 0];

bR = [0.154373542967849 0.307547588471376 0.054439037790856 0.189611674483496 0.294028156286422]';

cT = [
0
0.556337718891090
0.428870688216872
0.815008947642716];

AT = [ 0 0 0 0;
 0.556337718891090 0 0 0;
  0.166867537553458 0.262003150663414 0 0;
   0.104422177204659 0.163956032598547 0.546630737839510 0];

bT = [0.203508169408374 0.096469758967330 0.321630956102914 0.378391115521382]'







% That's one big method for mankind
c = [cR; cM+1; cT+2];
b = [bR; bM; bT];

e4 = ones(4,1);
Z44 = zeros(4,4);
Z54 = zeros(5,4);

A = [ ...
    AR         Z54        Z54; ...
    e4 * bR'   AM         Z44; ...
    e4 * bR'   e4 * bM'   AT]

% one smaller step by a third
c = c / 3;
b = b / 3;
A = A / 3;


%% test M instead, 2nd-order as promised :-P
A = AM;  c = cM;  b = bM;
%A = AR;  c = cR;  b = bR;
%A = AT;  c = cT;  b = bT;

%% test RT
if (1==0)
c = [cR; cT+1];
b = [bR; bT];

e4 = ones(4,1);
Z44 = zeros(4,4);
Z54 = zeros(5,4);

A = [ ...
    AR         Z54; ...
    e4 * bR'   AT]

c = c / 2;
b = b / 2;
A = A / 2;
end


C = diag(c);
e = ones(length(c),1);

disp('Ae = c:')
max(abs(A * e - c))
disp('OC errors:')
% order 1
oc(1) = b' * e;
% order 2
oc(2) = b' * c;
% order 3
oc(3) = b' * c.^2;
oc(4) = b' * A * c;
% order 4
oc(5) = b' * c.^3;
oc(6) = b' * C * A * c;
oc(7) = b' * A * c.^2;
oc(8) = b' * A * A * c;

g = [1 1/2 1/3 1/6 1/4 1/8 1/12 1/24];

oc - g


